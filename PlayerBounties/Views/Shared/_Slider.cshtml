@model IEnumerable<PlayerBounties.Models.Character>

<style>
	#slider-frame > div.slider { padding: 10px !important; }
	.scroll-pane { overflow: auto; width: 99%; float:left; background: -moz-linear-gradient(center top , #333333, #666666) repeat scroll 0 0 transparent; background-color: #333333;}
	.scroll-content { width: 2440px; float: left; }
	.scroll-content-item { width: 125px; height: 125px; float: left; margin: 10px; font-size: 12px; text-align: center; background: #111111}
	* html .scroll-content-item { display: inline; } /* IE6 float double margin bug */
	.scroll-bar-wrap { clear: left; padding: 0 4px 0 2px; margin: 0 -1px -1px -1px; }
	.scroll-bar-wrap .ui-slider { background: none; border:0; height: 17px; margin: 0 auto;  }
	.scroll-bar-wrap .ui-handle-helper-parent { position: relative; width: 100%; height: 100%; margin: 0 auto; }
	.scroll-bar-wrap .ui-slider-handle { top: 2px; height: 12px; }
	.scroll-bar-wrap .ui-slider-handle .ui-icon { margin: -8px auto 0; position: relative; top: 50%; }
</style>

<script>
	$(function()
	{
		//scrollpane parts
		var scrollPane = $(".scroll-pane"),
		scrollContent = $(".scroll-content");

		//build slider
		var scrollbar = $(".scroll-bar").slider({
			slide: function(event, ui)
			{
				if(scrollContent.width() > scrollPane.width())
				{
					scrollContent.css("margin-left", Math.round(
					ui.value / 100 * (scrollPane.width() - scrollContent.width())
				) + "px");
				} else
				{
					scrollContent.css("margin-left", 0);
				}
			}
		});

		//append icon to handle
		var handleHelper = scrollbar.find(".ui-slider-handle")
	.mousedown(function()
	{
		scrollbar.width(handleHelper.width());
	})
	.mouseup(function()
	{
		scrollbar.width("100%");
	})
	.append("<span class='ui-icon ui-icon-grip-dotted-vertical'></span>")
	.wrap("<div class='ui-handle-helper-parent'></div>").parent();

		//change overflow to hidden now that slider handles the scrolling
		scrollPane.css("overflow", "hidden");

		//size scrollbar and handle proportionally to scroll distance
		function sizeScrollbar()
		{
			var remainder = scrollContent.width() - scrollPane.width();
			var proportion = remainder / scrollContent.width();
			var handleSize = scrollPane.width() - (proportion * scrollPane.width());
			scrollbar.find(".ui-slider-handle").css({
				width: handleSize,
				"margin-left": -handleSize / 2
			});
			handleHelper.width("").width(scrollbar.width() - handleSize);
		}

		//reset slider value based on scroll content position
		function resetValue()
		{
			var remainder = scrollPane.width() - scrollContent.width();
			var leftVal = scrollContent.css("margin-left") === "auto" ? 0 :
			parseInt(scrollContent.css("margin-left"));
			var percentage = Math.round(leftVal / remainder * 100);
			scrollbar.slider("value", percentage);
		}

		//if the slider is 100% and window gets larger, reveal content
		function reflowContent()
		{
			var showing = scrollContent.width() + parseInt(scrollContent.css("margin-left"), 10);
			var gap = scrollPane.width() - showing;
			if(gap > 0)
			{
				scrollContent.css("margin-left", parseInt(scrollContent.css("margin-left"), 10) + gap);
			}
		}

		//change handle position on window resize
		$(window).resize(function()
		{
			resetValue();
			sizeScrollbar();
			reflowContent();
		});
		//init scrollbar size
		setTimeout(sizeScrollbar, 10); //safari wants a timeout
	});
</script>

<div class="slider">

	<div class="scroll-pane ui-widget ui-widget-header ui-corner-all">
		<div class="scroll-content">
			@foreach(var item in Model)
			{
				<div class="scroll-content-item ui-widget-header">
				   <table>
						<tr>
							<td>
								@Html.ActionLink("  ", "Details", "Character", new { id = item.Id }, new { style = "background: url('../../" + @item.GetClassAvatarPath(item.AvatarId.Value) + "') no-repeat center right;display:block; height:90px; width:90px;margin-top:-2px;text-decoration:none;" })
							</td>
							<td style="width: 15px; padding-left: 10px; opacity: 0.75;" valign="top">
								<a href="@Url.Action("Edit", "Character", new { id = item.Id })"><img src="../../Content/Images/editIcon.gif" alt="Edit" id="editImage"/></a>
							</td>
						</tr>
						<tr>							
							<th colspan="2" class="@item.GetClassStyle(item.PlayerClass.Name)">
								@Html.ActionLink(item.Name, "Details", "Character", new { id = item.Id }, null)
							</th>
						</tr>
					</table>	
				</div>   
			}			
		</div>

		<div class="scroll-bar-wrap ui-widget-content ui-corner-bottom">
			<div class="scroll-bar"></div>
		</div>
	</div>

</div>